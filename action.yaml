name: ECS Service Deploy
description: Deploy an ECS Service using Terraform
inputs:
  name:
    description: 'Component name within this deploy. The repo name will be prefixed to this.'
    default: ''

  prefix:
    description: 'Resource prefix to use when creating resources'
    default: ''

  image:
    description: 'ECR repository name containing bootable image'
    default: ''

  label:
    desciption: 'label of ECR image to deploy'
    default: latest

  public:
    description: 'Enable Public IP Allocation'
    default: false

  cpu:
    description: 'ECS CPU Allocation'
    default: 256
  mem:
    description: 'ECS Memory Allocation'
    default: 512

  environment:
    description: 'Application ENV. E.g. { VAR1 = VAL1, VAR2 = VAL2 }'
    default: "{}"

  secrets:
    description: 'Application secerts (similar to environment). E.g. { SECRET1 = VAL1, SECRET2 = VAL2 }'
    default: "{}"

  certificate:
    description: 'Certificate name to use.  If unspecified then a certificate will be automatically generated'.
    default: ""
  certificate_alt_names:
    description: 'List of subjective alternate names to apply to autogenerated SSL certs'
    default: ""

  autoscaling:
    description: 'Enable/Disable service autoscaling'
    default: true
  autoscaling_min:
    description: 'Minimum number of ECS tasks during scale-in'
    default: 3
  autoscaling_max:
    description: 'Maximum number of ECS tasks during scale-out'
    default: 21
  autoscaling_target_cpu:
    description: 'Autoscaling target CPU threshold'
    default: 50
  autoscaling_target_mem:
    description: 'Autoscaling target memory threshold'
    default: 50
  autoscaling_cooldown:
    description: 'How long to wait before scale-in'
    default: 300

  policies:
    description: 'Comma separated list of policies to attach to the ECS task'
    default: ""

  target_port:
    description: 'TCP/IP port the container is listening on'
    default: 80
  target_protocol:
    description: 'TCP/IP protocol the container communications with'
    default: 'http'

  listener_port:
    description: 'TCP/IP port the loadbalancer should listen on'
    default: 443
  listener_protocol:
    description: 'TCP/IP protocol the loadbalancer uses for communication'
    default: 'https'

  health_check_path:
    description: 'Health check path'
    default: /
  health_check_timeout:
    description: 'Health check timeout'
    default: 10
  health_check_interval:
    description: 'Health check interval'
    default: 30
  health_check_grace_period:
    description: 'Grace period in which to ignore the health check during task startup'
    default: 120

  plan:
    description: 'Perform a Terraform Plan'
    default: true
  deploy:
    description: 'Perform Terraform Apply'
    default: true
  destroy:
    description: 'Perform Terraform Destroy'
    default: false
  debug:
    description: 'enable debugging'
    default: false

outputs:
  service-arn:
    description: 'ECS Service ARN'
  task-arn:
    description: 'ECS Task ARN'
  loadbalancer-arn:
    description: 'Network Loadbalancer ARN'
  loadbalancer-endpoint:
    description: 'Network Loadbalancer Endpoint'
  certificate-arn:
    description: 'SSL Certificate ARN'
  certificate-name:
    description: 'DNS Name on the ACM Certificate'

runs:
  using: docker
  image: Dockerfile
